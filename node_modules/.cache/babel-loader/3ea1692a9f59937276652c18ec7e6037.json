{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\DAPP_starter\\\\defi_tutorial\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport './App.css';\nimport Web3 from 'web3';\nimport DaiToken from '../abis/DaiToken.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockChainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, daiTokenData, daiToken, daiTokenBalance, dappTokenData, dappToken, dappTokenBalance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context2.sent;\n                console.log(networkId); // We ll Load the Dai token here, we imported it in the top of our code just like others  \n\n                daiTokenData = DaiToken.networks[networkId];\n\n                if (!daiTokenData) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address);\n                this.setState({\n                  daiToken: daiToken\n                });\n                _context2.next = 16;\n                return daiToken.methods.balanceOf(this.state.account).call();\n\n              case 16:\n                daiTokenBalance = _context2.sent;\n                this.setState({\n                  daiTokenBalance: daiTokenBalance.toString()\n                });\n                console.log(daiTokenBalance);\n                _context2.next = 22;\n                break;\n\n              case 21:\n                window.alert('DaiToken contract not deployed to detected network');\n\n              case 22:\n                // We will Load DappToken\n                dappTokenData = DappToken.networks[networkId];\n\n                if (!dappTokenData) {\n                  _context2.next = 32;\n                  break;\n                }\n\n                dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address);\n                this.setState({\n                  dappToken: dappToken\n                });\n                _context2.next = 28;\n                return dappToken.methods.balanceOf(this.state.account).call();\n\n              case 28:\n                dappTokenBalance = _context2.sent;\n                this.setState({\n                  dappTokenBalance: dappTokenBalance.toString()\n                });\n                _context2.next = 33;\n                break;\n\n              case 32:\n                window.alert('DappToken contract not deployed to detected network.');\n\n              case 33:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }() // Below are the rules given by mtamask\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying Mtamask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Hello, World!\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["F:/DAPP_starter/defi_tutorial/src/components/App.js"],"names":["React","Component","Navbar","Web3","DaiToken","App","loadWeb3","loadBlockChainData","web3","window","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","daiTokenData","networks","daiToken","Contract","abi","address","methods","balanceOf","state","call","daiTokenBalance","toString","alert","dappTokenData","DappToken","dappToken","dappTokenBalance","ethereum","enable","currentProvider","props","tokenFarm","stakingBalance","loading","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport './App.css'\r\nimport Web3 from 'web3'\r\nimport DaiToken from '../abis/DaiToken.json'\r\nclass App extends Component {\r\n\r\n\r\nasync componentWillMount(){\r\n\r\n  await this.loadWeb3()\r\n  await this.loadBlockChainData()\r\n}\r\n\r\nasync loadBlockChainData(){\r\n  const web3 = window.web3\r\n\r\n  const accounts = await web3.eth.getAccounts()\r\n  console.log(accounts)\r\n  this.setState({account: accounts[0]})\r\n\r\n  const networkId = await web3.eth.net.getId()\r\n  console.log(networkId)\r\n\r\n  // We ll Load the Dai token here, we imported it in the top of our code just like others  \r\n  const daiTokenData = DaiToken.networks[networkId]\r\n  if(daiTokenData){\r\n    const daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address)\r\n    this.setState({daiToken})\r\n    let daiTokenBalance = await daiToken.methods.balanceOf(this.state.account).call()\r\n    this.setState({daiTokenBalance: daiTokenBalance.toString()})\r\n    console.log(daiTokenBalance)\r\n  }else{\r\n    window.alert('DaiToken contract not deployed to detected network')\r\n  }\r\n\r\n  // We will Load DappToken\r\n  const dappTokenData = DappToken.networks[networkId]\r\n  if(dappTokenData) {\r\n    const dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address)\r\n    this.setState({ dappToken })\r\n    let dappTokenBalance = await dappToken.methods.balanceOf(this.state.account).call()\r\n    this.setState({ dappTokenBalance: dappTokenBalance.toString() })\r\n  } else {\r\n    window.alert('DappToken contract not deployed to detected network.')\r\n  }\r\n}\r\n\r\n// Below are the rules given by mtamask\r\n  async loadWeb3(){\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3){\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else{\r\n      window.alert('Non-Ethereum browser detected. You should consider trying Mtamask!')\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      daiToken: {},\r\n      dappToken: {},\r\n      tokenFarm: {},\r\n      daiTokenBalance: '0',\r\n      dappTokenBalance: '0',\r\n      stakingBalance: '0',\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"http://www.dappuniversity.com/bootcamp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                </a>\r\n\r\n                <h1>Hello, World!</h1>\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}